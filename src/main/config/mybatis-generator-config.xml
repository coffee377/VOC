<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 引入配置文件 -->
    <properties resource="properties/jdbc*.properties"/>

    <!-- !!!! 数据库驱动路径 !!!! -->
    <classPathEntry location="${jdbc.driverPath}"/>

    <!-- 一个数据库一个context -->
    <context id="oracleContext" targetRuntime="MyBatis3">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="false"/>

        <!-- 生成的 Java 文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>

        <!-- 格式化 XML 代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <commentGenerator>
            <!-- 是否去除自动生成的注释 -->
            <property name="suppressAllComments" value="true"/>

            <!-- 是否去除注释时间戳 -->
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- !!!! 数据库配置，此处使用 properties/jdbc.properties 中的属性变量 !!!! -->
        <jdbcConnection driverClass="${jdbc.driverClass}" connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.password}"/>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（BigDecimal, Long, Integer, Short） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- !!!! Java 模型创建器，是必须要的元素 !!!! -->
        <javaModelGenerator targetPackage="com.voc.common.entity" targetProject="src/main/java">
            <!-- 在 targetPackage 的基础上，根据数据库的 schema 再生成一层 package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
            <!-- 设置是否在 getter 方法中，对 String 类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- !!!! 生成 mapper xml 文件!!!! -->
        <sqlMapGenerator targetPackage="com.voc.common.mapper" targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- !!!! 生成 mapper 对应 client，也就是接口dao !!!! -->
        <javaClientGenerator targetPackage="com.voc.common.dao" targetProject="src/main/java"
                             type="XMLMAPPER">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- !!!! 配置表信息 !!!! -->
        <!-- tableName:数据库表名称;domainObjectName:实体类名称;mapperName:DAO层接口名称;enable*ByExample:是否生成 example 类,默认为 true -->
        <table tableName="news" domainObjectName="News" mapperName="NewsDao"
               enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false"
               enableDeleteByPrimaryKey="true" enableInsert="true"
               enableSelectByPrimaryKey="true" enableUpdateByPrimaryKey="true"/>
    </context>
</generatorConfiguration>